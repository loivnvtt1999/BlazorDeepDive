@page "/servername"
@rendermode InteractiveServer
@* @inject SessionStorage sessionStorage *@
@inject ContainerStorage containerStorage
@inject NavigationManager NavigationManager

<h3>Server Name</h3>
<br />

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

@if (server is not null)
{
    <FieldComponent Label="Name">
        <Control>
            <input type="text" @bind-value="server.Name" class="form-control"></input>
        </Control>
    </FieldComponent>
    <br />
    <button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>
}


@code {
    private Server? server;

    private string? serverName;

    private string? errorMessage;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            server = new Server();
            StateHasChanged();
        }
    }

    private void GoNext()
    {

        if (string.IsNullOrWhiteSpace(server.Name))
        {
            this.errorMessage = "Server Name is required.";
        }
        else
        {
            containerStorage.SetServer(server);
            NavigationManager.NavigateTo($"/cityname");
        }

    }

}
